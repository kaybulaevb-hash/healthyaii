const OpenAI = require('openai');

class OpenAIService {
  constructor() {
    this.openai = null;
    this.isAvailable = false;
    
    if (process.env.OPENAI_API_KEY) {
      this.openai = new OpenAI({
        apiKey: process.env.OPENAI_API_KEY,
      });
      this.isAvailable = true;
    }
  }

  async generateCookingTip(day, mealData) {
    if (!this.isAvailable || !this.openai) {
      return this.getDefaultTip();
    }

    try {
      const mealNames = Object.values(mealData)
        .filter(meal => meal.name)
        .map(meal => meal.name)
        .join(', ');

      const prompt = `–î–µ–Ω—å ${day} –ø–ª–∞–Ω–∞ –ø–∏—Ç–∞–Ω–∏—è. –ë–ª—é–¥–∞: ${mealNames}. 
      –î–∞–π –∫–æ—Ä–æ—Ç–∫–∏–π (2-3 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è) –ø–æ–ª–µ–∑–Ω—ã–π —Å–æ–≤–µ—Ç –ø–æ –≥–æ—Ç–æ–≤–∫–µ –∏–ª–∏ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ –ø–∏—Ç–∞–Ω–∏—è –Ω–∞ —ç—Ç–æ—Ç –¥–µ–Ω—å. 
      –°–æ–≤–µ—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø—Ä–∞–∫—Ç–∏—á–Ω—ã–º –∏ –º–æ—Ç–∏–≤–∏—Ä—É—é—â–∏–º.`;

      const completion = await this.openai.chat.completions.create({
        model: "gpt-4o-mini",
        messages: [
          {
            role: "system",
            content: "–¢—ã - –æ–ø—ã—Ç–Ω—ã–π –¥–∏–µ—Ç–æ–ª–æ–≥ –∏ –∫—É–ª–∏–Ω–∞—Ä. –î–∞–µ—à—å –∫–æ—Ä–æ—Ç–∫–∏–µ, –ø—Ä–∞–∫—Ç–∏—á–Ω—ã–µ —Å–æ–≤–µ—Ç—ã –ø–æ –ø–∏—Ç–∞–Ω–∏—é –∏ –≥–æ—Ç–æ–≤–∫–µ."
          },
          {
            role: "user",
            content: prompt
          }
        ],
        max_tokens: 150,
        temperature: 0.7,
      });

      const tip = completion.choices[0]?.message?.content?.trim();
      return tip || this.getDefaultTip();
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ OpenAI API:', error);
      return this.getDefaultTip();
    }
  }

  getDefaultTip() {
    const defaultTips = [
      "üí° –°–µ–≥–æ–¥–Ω—è –æ—Ç–ª–∏—á–Ω—ã–π –¥–µ–Ω—å –¥–ª—è –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è –∑–¥–æ—Ä–æ–≤–æ–π –ø–∏—â–∏! –ù–µ –∑–∞–±—É–¥—å—Ç–µ –ø—Ä–æ—á–∏—Ç–∞—Ç—å —Ä–µ—Ü–µ–ø—Ç –∑–∞—Ä–∞–Ω–µ–µ –∏ –ø–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å –≤—Å–µ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã.",
      "üí° –ü–ª–∞–Ω–∏—Ä—É–π—Ç–µ –≤—Ä–µ–º—è –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è —Å –∑–∞–ø–∞—Å–æ–º - —ç—Ç–æ –ø–æ–º–æ–∂–µ—Ç –∏–∑–±–µ–∂–∞—Ç—å —Å—Ç—Ä–µ—Å—Å–∞ –∏ –Ω–∞—Å–ª–∞–¥–∏—Ç—å—Å—è –ø—Ä–æ—Ü–µ—Å—Å–æ–º –≥–æ—Ç–æ–≤–∫–∏.",
      "üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å–≤–µ–∂–∏–µ —Å–µ–∑–æ–Ω–Ω—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã - –æ–Ω–∏ –Ω–µ —Ç–æ–ª—å–∫–æ –≤–∫—É—Å–Ω–µ–µ, –Ω–æ –∏ –ø–æ–ª–µ–∑–Ω–µ–µ –¥–ª—è –∑–¥–æ—Ä–æ–≤—å—è.",
      "üí° –ü—Ä–∏–≥–æ—Ç–æ–≤—å—Ç–µ –ø–æ—Ä—Ü–∏—é —Å –∑–∞–ø–∞—Å–æ–º - —ç—Ç–æ —Å—ç–∫–æ–Ω–æ–º–∏—Ç –≤—Ä–µ–º—è –Ω–∞ –∑–∞–≤—Ç—Ä–∞ –∏ –æ–±–µ—Å–ø–µ—á–∏—Ç –∑–¥–æ—Ä–æ–≤—ã–π –ø–µ—Ä–µ–∫—É—Å.",
      "üí° –ù–µ –∑–∞–±—ã–≤–∞–π—Ç–µ –ø—Ä–æ –±–∞–ª–∞–Ω—Å –±–µ–ª–∫–æ–≤, –∂–∏—Ä–æ–≤ –∏ —É–≥–ª–µ–≤–æ–¥–æ–≤ –≤ –∫–∞–∂–¥–æ–º –ø—Ä–∏–µ–º–µ –ø–∏—â–∏.",
      "üí° –≠–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∏—Ä—É–π—Ç–µ —Å–æ —Å–ø–µ—Ü–∏—è–º–∏ - –æ–Ω–∏ –º–æ–≥—É—Ç –ø—Ä–µ–≤—Ä–∞—Ç–∏—Ç—å –ø—Ä–æ—Å—Ç–æ–µ –±–ª—é–¥–æ –≤ –∫—É–ª–∏–Ω–∞—Ä–Ω—ã–π —à–µ–¥–µ–≤—Ä.",
      "üí° –ü–µ–π—Ç–µ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –≤–æ–¥—ã –≤–æ –≤—Ä–µ–º—è –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è –∏ –ø—Ä–∏–µ–º–∞ –ø–∏—â–∏.",
      "üí° –ì–æ—Ç–æ–≤—å—Ç–µ —Å –ª—é–±–æ–≤—å—é - —ç—Ç–æ –≥–ª–∞–≤–Ω—ã–π —Å–µ–∫—Ä–µ—Ç –≤–∫—É—Å–Ω–æ–π –µ–¥—ã!"
    ];
    
    const randomIndex = Math.floor(Math.random() * defaultTips.length);
    return defaultTips[randomIndex];
  }

  async generateMealSuggestion(day, currentMeals) {
    if (!this.isAvailable || !this.openai) {
      return null;
    }

    try {
      const prompt = `–î–µ–Ω—å ${day} –ø–ª–∞–Ω–∞ –ø–∏—Ç–∞–Ω–∏—è. –¢–µ–∫—É—â–∏–µ –±–ª—é–¥–∞: ${JSON.stringify(currentMeals)}. 
      –ü—Ä–µ–¥–ª–æ–∂–∏ –æ–¥–Ω–æ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–æ–µ –±–ª—é–¥–æ, –∫–æ—Ç–æ—Ä–æ–µ –±—É–¥–µ—Ç —Ö–æ—Ä–æ—à–æ —Å–æ—á–µ—Ç–∞—Ç—å—Å—è —Å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º –ø–ª–∞–Ω–æ–º. 
      –û—Ç–≤–µ—Ç –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ç–æ–ª—å–∫–æ –Ω–∞–∑–≤–∞–Ω–∏–µ –±–ª—é–¥–∞ –∏ –∫—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ (1-2 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è).`;

      const completion = await this.openai.chat.completions.create({
        model: "gpt-4o-mini",
        messages: [
          {
            role: "system",
            content: "–¢—ã - –¥–∏–µ—Ç–æ–ª–æ–≥, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ –±–ª—é–¥–∞ –¥–ª—è —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–∏—è —Ä–∞—Ü–∏–æ–Ω–∞."
          },
          {
            role: "user",
            content: prompt
          }
        ],
        max_tokens: 100,
        temperature: 0.8,
      });

      return completion.choices[0]?.message?.content?.trim() || null;
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è:', error);
      return null;
    }
  }
}

module.exports = OpenAIService;
